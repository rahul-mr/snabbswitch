---------
-- CRC --
---------
-- This module implements CRC-14 functionality
-- Reference: http://www.w3.org/TR/PNG/#D-CRCAppendix

module(...,package.seeall)

local bit = require("bit")

local CRC14_MAX = 0x3FFF
-- CRC14_POLY = 0x21E8 -- HD=4, MaxLen=2048 http://www.ece.cmu.edu/~koopman/roses/dsn04/koopman04_crc_poly_embedded.pdf
                       -- Note: for current usage: Max Data length = (2*16 + 2*128) = 288 bits
--pre-computed hash values (note: index range = 1 to 256)
local crc14_table = { 

0x0000 , 0x3562 , 0x2915 , 0x1c77 , 0x11fb , 0x2499 , 0x38ee , 0x0d8c ,
0x23f6 , 0x1694 , 0x0ae3 , 0x3f81 , 0x320d , 0x076f , 0x1b18 , 0x2e7a ,
0x043d , 0x315f , 0x2d28 , 0x184a , 0x15c6 , 0x20a4 , 0x3cd3 , 0x09b1 ,
0x27cb , 0x12a9 , 0x0ede , 0x3bbc , 0x3630 , 0x0352 , 0x1f25 , 0x2a47 ,
0x087a , 0x3d18 , 0x216f , 0x140d , 0x1981 , 0x2ce3 , 0x3094 , 0x05f6 ,
0x2b8c , 0x1eee , 0x0299 , 0x37fb , 0x3a77 , 0x0f15 , 0x1362 , 0x2600 ,
0x0c47 , 0x3925 , 0x2552 , 0x1030 , 0x1dbc , 0x28de , 0x34a9 , 0x01cb ,
0x2fb1 , 0x1ad3 , 0x06a4 , 0x33c6 , 0x3e4a , 0x0b28 , 0x175f , 0x223d ,
0x10f4 , 0x2596 , 0x39e1 , 0x0c83 , 0x010f , 0x346d , 0x281a , 0x1d78 ,
0x3302 , 0x0660 , 0x1a17 , 0x2f75 , 0x22f9 , 0x179b , 0x0bec , 0x3e8e ,
0x14c9 , 0x21ab , 0x3ddc , 0x08be , 0x0532 , 0x3050 , 0x2c27 , 0x1945 ,
0x373f , 0x025d , 0x1e2a , 0x2b48 , 0x26c4 , 0x13a6 , 0x0fd1 , 0x3ab3 ,
0x188e , 0x2dec , 0x319b , 0x04f9 , 0x0975 , 0x3c17 , 0x2060 , 0x1502 ,
0x3b78 , 0x0e1a , 0x126d , 0x270f , 0x2a83 , 0x1fe1 , 0x0396 , 0x36f4 ,
0x1cb3 , 0x29d1 , 0x35a6 , 0x00c4 , 0x0d48 , 0x382a , 0x245d , 0x113f ,
0x3f45 , 0x0a27 , 0x1650 , 0x2332 , 0x2ebe , 0x1bdc , 0x07ab , 0x32c9 ,
0x21e8 , 0x148a , 0x08fd , 0x3d9f , 0x3013 , 0x0571 , 0x1906 , 0x2c64 ,
0x021e , 0x377c , 0x2b0b , 0x1e69 , 0x13e5 , 0x2687 , 0x3af0 , 0x0f92 ,
0x25d5 , 0x10b7 , 0x0cc0 , 0x39a2 , 0x342e , 0x014c , 0x1d3b , 0x2859 ,
0x0623 , 0x3341 , 0x2f36 , 0x1a54 , 0x17d8 , 0x22ba , 0x3ecd , 0x0baf ,
0x2992 , 0x1cf0 , 0x0087 , 0x35e5 , 0x3869 , 0x0d0b , 0x117c , 0x241e ,
0x0a64 , 0x3f06 , 0x2371 , 0x1613 , 0x1b9f , 0x2efd , 0x328a , 0x07e8 ,
0x2daf , 0x18cd , 0x04ba , 0x31d8 , 0x3c54 , 0x0936 , 0x1541 , 0x2023 ,
0x0e59 , 0x3b3b , 0x274c , 0x122e , 0x1fa2 , 0x2ac0 , 0x36b7 , 0x03d5 ,
0x311c , 0x047e , 0x1809 , 0x2d6b , 0x20e7 , 0x1585 , 0x09f2 , 0x3c90 ,
0x12ea , 0x2788 , 0x3bff , 0x0e9d , 0x0311 , 0x3673 , 0x2a04 , 0x1f66 ,
0x3521 , 0x0043 , 0x1c34 , 0x2956 , 0x24da , 0x11b8 , 0x0dcf , 0x38ad ,
0x16d7 , 0x23b5 , 0x3fc2 , 0x0aa0 , 0x072c , 0x324e , 0x2e39 , 0x1b5b ,
0x3966 , 0x0c04 , 0x1073 , 0x2511 , 0x289d , 0x1dff , 0x0188 , 0x34ea ,
0x1a90 , 0x2ff2 , 0x3385 , 0x06e7 , 0x0b6b , 0x3e09 , 0x227e , 0x171c ,
0x3d5b , 0x0839 , 0x144e , 0x212c , 0x2ca0 , 0x19c2 , 0x05b5 , 0x30d7 ,
0x1ead , 0x2bcf , 0x37b8 , 0x02da , 0x0f56 , 0x3a34 , 0x2643 , 0x1321 

}


function crc14()

    local M = {}
    M.crc = CRC14_MAX
 
    function M.add_byte(byte)
        assert(byte, "byte can't be nil")
        M.crc = bit.bxor(crc14_table[1 + bit.band(bit.bxor(M.crc, byte), 0xFF)], --crc14_table indices 1 to 256
                         bit.rshift(M.crc, 8))
    end

    function M.generate()
        return bit.bxor(CRC14_MAX, M.crc)
    end

    function M.reset()
        M = {}
        M.crc = CRC14_MAX
    end

    return M
end

local function hash_test(tbl, msg, exp)

    local hash = crc14()
    
    for i=1, #tbl do
        hash.add_byte( tbl[i] )
    end

    local val = hash.generate()
    print( string.format("%-54s", msg) .. " | HASH = 0x" .. bit.tohex(val) )

    assert( val == exp, "Expected: "..tostring(exp).." Calculated: "..tostring(val))

end

function unittest_crc14()

    local test_table = { 0xcc, 0xcc,   0xee, 0xee,   0xc0, 0xa8, 0x0a, 0x01,   0xc0, 0xa8, 0x0a, 0x02 }
    
    --test 1 - default hash
    hash_test(test_table, "Test1 - default", 0x052b)

    --test 2 - change source port by 1 bit
    test_table[2] = 0xcd --previously: 0xcc
    hash_test(test_table, "Test2 - altered src port", 0x3280)

    --test 2 - also change destination port by 1 bit
    test_table[4] = 0xef --previously: 0xee
    hash_test(test_table, "Test3 - altered src & dest ports", 0x2d0c)

    --test 2 - also change source address by 1 bit
    test_table[8] = 0x00 --previously: 0x01
    hash_test(test_table, "Test4 - altered src & dest ports, src address", 0x1b2e)

    --test 2 - also change destination address by 1 bit
    test_table[12] = 0x03 --previously: 0x02
    hash_test(test_table, "Test5 - altered src & dest ports, src & dest addresses", 0x2e4c)
end

